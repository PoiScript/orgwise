{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Org Markup",
  "patterns": [
    {
      "name": "markup.heading.org",
      "begin": "^\\s*[*]{1}\\s+",
      "end": "$",
      "patterns": [
        {
          "include": "#header-matches"
        }
      ]
    },
    {
      "name": "entity.name.type.org",
      "begin": "^\\s*[*]{2}\\s+",
      "end": "$",
      "patterns": [
        {
          "include": "#header-matches"
        }
      ]
    },
    {
      "name": "entity.name.function.org",
      "begin": "^\\s*[*]{3}\\s+",
      "end": "$",
      "patterns": [
        {
          "include": "#header-matches"
        }
      ]
    },
    {
      "name": "entity.other.attribute-name.org",
      "begin": "^\\s*[*]{4}\\s+",
      "end": "$",
      "patterns": [
        {
          "include": "#header-matches"
        }
      ]
    },
    {
      "include": "#common"
    },
    {
      "include": "#src-blocks"
    },
    {
      "include": "#comment-blocks"
    },
    {
      "include": "#blocks"
    }
  ],
  "repository": {
    "src-blocks": {
      "patterns": [
        {
          "name": "meta.block.source.js.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(js|javascript|mjs|es6|jsx)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.js",
              "patterns": [
                {
                  "include": "source.js"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.js.regexp.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(js.regexp|regexp)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.js.regexp",
              "patterns": [
                {
                  "include": "source.js.regexp"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.ts.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(ts|typescript)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.ts",
              "patterns": [
                {
                  "include": "source.ts"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.tsx.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(tsx)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.tsx",
              "patterns": [
                {
                  "include": "source.tsx"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.java.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(java)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.java",
              "patterns": [
                {
                  "include": "source.java"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.python.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(python|py|py3|rpy|pyw|cpy|SConstruct|Sconstruct|sconstruct|SConscript|gyp|gypi)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.python",
              "patterns": [
                {
                  "include": "source.python"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.regexp.python.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(regexp.python|re)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.regexp.python",
              "patterns": [
                {
                  "include": "source.regexp.python"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.css.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(css)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.css",
              "patterns": [
                {
                  "include": "source.css"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.lua.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(lua)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.lua",
              "patterns": [
                {
                  "include": "source.lua"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.ini.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(ini|conf|properties)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.ini",
              "patterns": [
                {
                  "include": "source.ini"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.makefile.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(makefile|Malefile)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.makefile",
              "patterns": [
                {
                  "include": "source.makefile"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.perl.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(perl|pl|pm)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.perl",
              "patterns": [
                {
                  "include": "source.perl"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.r.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(r|R|s|S|Rprofile)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.r",
              "patterns": [
                {
                  "include": "source.r"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.ruby.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(ruby|rb|rbx|rjs|Rakefile|rake|cgi|fcgi|gemspec|irbrc|Capfile|ru|prawn|Cheffile|Gemfile|Guardfile|Hobofile|Vagrantfile|Appraisals|Rantfile|Berksfile|Berksfile.lock|Thorfile|Puppetfile)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.ruby",
              "patterns": [
                {
                  "include": "source.ruby"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.php.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(php|php3|php4|php5|phpt|phtml|aw|ctp)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.php",
              "patterns": [
                {
                  "include": "source.php"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.sql.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(sql|ddl|dml)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.sql",
              "patterns": [
                {
                  "include": "source.sql"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.asp.vb.net.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(asp.vb.net|vb)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.asp.vb.net",
              "patterns": [
                {
                  "include": "source.asp.vb.net"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.dosbatch.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(dosbatch|batch|bat)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.dosbatch",
              "patterns": [
                {
                  "include": "source.dosbatch"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.clojure.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(clojure|clj|cljs)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.clojure",
              "patterns": [
                {
                  "include": "source.clojure"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.coffee.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(coffee|Cakefile|coffe.erb)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.coffee",
              "patterns": [
                {
                  "include": "source.coffee"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.c.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(c|h)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.c",
              "patterns": [
                {
                  "include": "source.c"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.cpp.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(cpp|c\\+\\+|cxx)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.cpp",
              "patterns": [
                {
                  "include": "source.cpp"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.objc.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(objc|objectivec|objective-c|mm|m|obj-c)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.objc",
              "patterns": [
                {
                  "include": "source.objc"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.diff.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(diff|patch|rej)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.diff",
              "patterns": [
                {
                  "include": "source.diff"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.dockerfile.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(dockerfile|Dockerfile)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.dockerfile",
              "patterns": [
                {
                  "include": "source.dockerfile"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.go.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(go|golang)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.go",
              "patterns": [
                {
                  "include": "source.go"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.groovy.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(groovy|gvy)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.groovy",
              "patterns": [
                {
                  "include": "source.groovy"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.lisp.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(lisp|emacs-lisp|common-lisp)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.lisp",
              "patterns": [
                {
                  "include": "source.lisp"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.pug.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(pug|jade)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.pug",
              "patterns": [
                {
                  "include": "source.pug"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.css.less.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(css.less|less)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.css.less",
              "patterns": [
                {
                  "include": "source.css.less"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.css.scss.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(css.scss|scss)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.css.scss",
              "patterns": [
                {
                  "include": "source.css.scss"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.perl.6.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(perl.6|perl6|p6|pl6|pm6|nqp)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.perl.6",
              "patterns": [
                {
                  "include": "source.perl.6"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.rust.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(rust|rs)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.rust",
              "patterns": [
                {
                  "include": "source.rust"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.scala.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(scala|sbt)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.scala",
              "patterns": [
                {
                  "include": "source.scala"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.shell.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(shell|sh|bash|zsh|bashrc|bash_profile)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.shell",
              "patterns": [
                {
                  "include": "source.shell"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.cs.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(cs|csharp|c#)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.cs",
              "patterns": [
                {
                  "include": "source.cs"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.fs.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(fs|fsharp|f#)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.fs",
              "patterns": [
                {
                  "include": "source.fs"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.dart.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(dart)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.dart",
              "patterns": [
                {
                  "include": "source.dart"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.nim.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(nim)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.nim",
              "patterns": [
                {
                  "include": "source.nim"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.elixir.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(elixir)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.elixir",
              "patterns": [
                {
                  "include": "source.elixir"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.erlang.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(erlang|erl|grl)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.erlang",
              "patterns": [
                {
                  "include": "source.erlang"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.ocaml.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(ocaml)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.ocaml",
              "patterns": [
                {
                  "include": "source.ocaml"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.zig.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(zig)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.zig",
              "patterns": [
                {
                  "include": "source.zig"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.yaml.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(yaml|yml)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.yaml",
              "patterns": [
                {
                  "include": "source.yaml"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.json.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(json)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.json",
              "patterns": [
                {
                  "include": "source.json"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.xml.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(xml|xsd|tld|jsp|pt|cpt|dtml|rss|opml)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.xml",
              "patterns": [
                {
                  "include": "text.xml"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.xsl.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(xsl|xslt)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.xsl",
              "patterns": [
                {
                  "include": "text.xml.xsl"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.markdown.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(markdown|md)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.markdown",
              "patterns": [
                {
                  "include": "text.html.markdown"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.orgmode.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(orgmode|org)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.orgmode",
              "patterns": [
                {
                  "include": "source.org"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.html.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(html|htm|shtml|xhtml|inc|tmpl|tpl)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.html",
              "patterns": [
                {
                  "include": "text.html.basic"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.COMMIT_EDITMSG.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(COMMIT_EDITMSG|MERGE_MSG)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.COMMIT_EDITMSG",
              "patterns": [
                {
                  "include": "text.git-commit"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.git-rebase-todo.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(git-rebase-todo)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.git-rebase-todo",
              "patterns": [
                {
                  "include": "text.git-rebase"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.latex.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(latex|tex)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.latex",
              "patterns": [
                {
                  "include": "text.tex.latex"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.block.source.unknown.org",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_SRC)\\s+(\\w+)\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_SRC)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "2": {
              "name": "constant.other.language.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_SRC\\s*)",
              "contentName": "meta.embedded.block.unknown"
            }
          ]
        }
      ]
    },
    "comment-blocks": {
      "patterns": [
        {
          "name": "meta.block.comment.org",
          "begin": "(?i)(^|\\s)(#\\+BEGIN_COMMENT)(.*)$",
          "end": "(?i)(^|\\s)(#\\+END_COMMENT)(.*)$",
          "beginCaptures": {
            "1": {
              "name": "comment.block.org"
            },
            "2": {
              "name": "comment.block.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "comment.block.org"
            },
            "2": {
              "name": "comment.block.org"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)(.*)",
              "while": "(?i)(^|\\G)(?!\\s*#\\+END_COMMENT\\s*)",
              "contentName": "comment.block.org"
            }
          ]
        }
      ]
    },
    "blocks": {
      "patterns": [
        {
          "name": "meta.block.${2:/downcase}",
          "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_(\\w+))\\b\\s*(.*)$",
          "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_\\2)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            },
            "3": {
              "name": "string.other.header-args.org"
            }
          },
          "endCaptures": {
            "1": {
              "name": "keyword.control.block.org"
            }
          },
          "patterns": [
            {
              "include": "#common"
            }
          ]
        }
      ]
    },
    "common": {
      "patterns": [
        {
          "include": "#link"
        },
        {
          "include": "#bold"
        },
        {
          "include": "#italic"
        },
        {
          "include": "#underline"
        },
        {
          "include": "#literal"
        },
        {
          "include": "#code"
        },
        {
          "include": "#verbatim"
        },
        {
          "include": "#comment"
        },
        {
          "include": "#keywords"
        }
      ]
    },
    "header-matches": {
      "patterns": [
        {
          "include": "#common"
        }
      ]
    },
    "link": {
      "patterns": [
        {
          "name": "meta.link.inline.org",
          "match": "(\\[\\[)([^\\[\\]]+)(\\])(?:(\\[)([^\\[\\]]+)(\\]))?(\\])",
          "captures": {
            "1": {
              "name": "punctuation.definition.string.begin.org"
            },
            "2": {
              "name": "markup.underline.link.org"
            },
            "3": {
              "name": "punctuation.definition.string.end.org"
            },
            "4": {
              "name": "punctuation.definition.string.begin.org"
            },
            "5": {
              "name": "string.other.link.title.org"
            },
            "6": {
              "name": "punctuation.definition.string.end.org"
            },
            "7": {
              "name": "punctuation.definition.string.end.org"
            },
            "8": {
              "name": "punctuation.definition.string.end.org"
            }
          }
        }
      ]
    },
    "bold": {
      "patterns": [
        {
          "name": "markup.bold.org",
          "match": "(^|\\s)\\*[^\\s](.*?[^\\s])?\\*($|\\W)"
        }
      ]
    },
    "italic": {
      "patterns": [
        {
          "name": "markup.italic.org",
          "match": "(^|\\s)/[^\\s](.*?[^\\s])?/($|\\W)"
        }
      ]
    },
    "underline": {
      "patterns": [
        {
          "name": "markup.underline.org",
          "match": "(^|\\s)\\_[^\\s](.*?[^\\s])?\\_($|\\W)"
        }
      ]
    },
    "literal": {
      "patterns": [
        {
          "name": "markup.italic.org",
          "match": "^:.+"
        }
      ]
    },
    "code": {
      "patterns": [
        {
          "name": "variable.org",
          "match": "(^|\\s)\\~[^\\s](.*?[^\\s])?\\~($|\\W)"
        }
      ]
    },
    "verbatim": {
      "patterns": [
        {
          "name": "variable.org",
          "match": "(^|\\s)\\=[^\\s](.*?[^\\s])?\\=($|\\W)"
        }
      ]
    },
    "comment": {
      "patterns": [
        {
          "match": "(^|\\s)(#)\\s(.*)$",
          "captures": {
            "2": {
              "name": "comment.line"
            },
            "3": {
              "name": "comment.line"
            }
          }
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "match": "^(#\\+\\w+:)\\s(.*)$",
          "captures": {
            "1": {
              "name": "support.type.property-name.org"
            },
            "2": {
              "name": "meta.structure.dictionary.value.org"
            }
          }
        }
      ]
    }
  },
  "scopeName": "source.org"
}
